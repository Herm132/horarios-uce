-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.asignatura
(
    id_asignatura serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    codigo character varying(20) COLLATE pg_catalog."default" NOT NULL,
    horas_clase integer NOT NULL,
    horas_pae integer NOT NULL,
    semestre integer NOT NULL,
    es_comun boolean DEFAULT false,
    CONSTRAINT asignatura_pkey PRIMARY KEY (id_asignatura),
    CONSTRAINT asignatura_codigo_key UNIQUE (codigo)
);

CREATE TABLE IF NOT EXISTS public.asignatura_carrera
(
    id serial NOT NULL,
    id_asignatura integer NOT NULL,
    id_carrera integer NOT NULL,
    CONSTRAINT asignatura_carrera_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.aula
(
    id_aula serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    capacidad integer NOT NULL,
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    edificio character varying(100) COLLATE pg_catalog."default",
    piso integer,
    id_facultad integer,
    uso_general boolean DEFAULT false,
    CONSTRAINT aula_pkey PRIMARY KEY (id_aula)
);

CREATE TABLE IF NOT EXISTS public.carrera
(
    id_carrera serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    codigo character varying(20) COLLATE pg_catalog."default" NOT NULL,
    id_facultad integer NOT NULL,
    CONSTRAINT carrera_pkey PRIMARY KEY (id_carrera),
    CONSTRAINT carrera_codigo_key UNIQUE (codigo)
);

CREATE TABLE IF NOT EXISTS public.docente
(
    id_usuario integer NOT NULL,
    modalidad_contratacion character varying(50) COLLATE pg_catalog."default",
    tiempo_dedicacion character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT docente_pkey PRIMARY KEY (id_usuario)
);

CREATE TABLE IF NOT EXISTS public.facultad
(
    id_facultad serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT facultad_pkey PRIMARY KEY (id_facultad),
    CONSTRAINT facultad_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.hora_clase
(
    id_hora_clase serial NOT NULL,
    dia character varying(10) COLLATE pg_catalog."default" NOT NULL,
    hora_inicio time without time zone NOT NULL,
    hora_fin time without time zone NOT NULL,
    CONSTRAINT hora_clase_pkey PRIMARY KEY (id_hora_clase)
);

CREATE TABLE IF NOT EXISTS public.horario
(
    id_horario serial NOT NULL,
    id_hora_clase integer NOT NULL,
    id_usuario integer NOT NULL,
    id_asignatura integer NOT NULL,
    id_aula integer NOT NULL,
    paralelo integer NOT NULL,
    id_semestre_lectivo integer,
    CONSTRAINT horario_pkey PRIMARY KEY (id_horario)
);

CREATE TABLE IF NOT EXISTS public.rol
(
    id_rol serial NOT NULL,
    nombre_rol character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT rol_pkey PRIMARY KEY (id_rol),
    CONSTRAINT rol_nombre_rol_key UNIQUE (nombre_rol)
);

CREATE TABLE IF NOT EXISTS public.semestre_lectivo
(
    id_semestre_lectivo serial NOT NULL,
    anio_inicio integer NOT NULL,
    anio_fin integer NOT NULL,
    periodo character(1) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT semestre_lectivo_pkey PRIMARY KEY (id_semestre_lectivo)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario serial NOT NULL,
    nombres character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellidos character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cedula character(10) COLLATE pg_catalog."default" NOT NULL,
    correo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    id_rol integer NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT usuario_cedula_key UNIQUE (cedula),
    CONSTRAINT usuario_correo_key UNIQUE (correo)
);

CREATE TABLE IF NOT EXISTS public.usuario_asignatura
(
    id serial NOT NULL,
    id_usuario integer NOT NULL,
    id_asignatura integer NOT NULL,
    paralelo integer NOT NULL,
    CONSTRAINT usuario_asignatura_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usuario_asignatura_estudiante
(
    id serial NOT NULL,
    id_usuario integer NOT NULL,
    id_asignatura integer NOT NULL,
    paralelo integer NOT NULL,
    CONSTRAINT usuario_asignatura_estudiante_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usuario_carrera
(
    id serial NOT NULL,
    id_usuario integer NOT NULL,
    id_carrera integer NOT NULL,
    CONSTRAINT usuario_carrera_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.asignatura_carrera
    ADD CONSTRAINT asignatura_carrera_id_asignatura_fkey FOREIGN KEY (id_asignatura)
    REFERENCES public.asignatura (id_asignatura) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.asignatura_carrera
    ADD CONSTRAINT asignatura_carrera_id_carrera_fkey FOREIGN KEY (id_carrera)
    REFERENCES public.carrera (id_carrera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.aula
    ADD CONSTRAINT aula_id_facultad_fkey FOREIGN KEY (id_facultad)
    REFERENCES public.facultad (id_facultad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.carrera
    ADD CONSTRAINT carrera_id_facultad_fkey FOREIGN KEY (id_facultad)
    REFERENCES public.facultad (id_facultad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.docente
    ADD CONSTRAINT docente_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS docente_pkey
    ON public.docente(id_usuario);


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT horario_id_asignatura_fkey FOREIGN KEY (id_asignatura)
    REFERENCES public.asignatura (id_asignatura) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT horario_id_aula_fkey FOREIGN KEY (id_aula)
    REFERENCES public.aula (id_aula) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT horario_id_hora_clase_fkey FOREIGN KEY (id_hora_clase)
    REFERENCES public.hora_clase (id_hora_clase) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT horario_id_semestre_lectivo_fkey FOREIGN KEY (id_semestre_lectivo)
    REFERENCES public.semestre_lectivo (id_semestre_lectivo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT horario_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT usuario_id_rol_fkey FOREIGN KEY (id_rol)
    REFERENCES public.rol (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_asignatura
    ADD CONSTRAINT usuario_asignatura_id_asignatura_fkey FOREIGN KEY (id_asignatura)
    REFERENCES public.asignatura (id_asignatura) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_asignatura
    ADD CONSTRAINT usuario_asignatura_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_asignatura_estudiante
    ADD CONSTRAINT usuario_asignatura_estudiante_id_asignatura_fkey FOREIGN KEY (id_asignatura)
    REFERENCES public.asignatura (id_asignatura) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_asignatura_estudiante
    ADD CONSTRAINT usuario_asignatura_estudiante_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_carrera
    ADD CONSTRAINT usuario_carrera_id_carrera_fkey FOREIGN KEY (id_carrera)
    REFERENCES public.carrera (id_carrera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_carrera
    ADD CONSTRAINT usuario_carrera_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;